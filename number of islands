class Solution {
    
    private static final int[][] directions = {
        {0,1},
        {1,0},
        {-1,0},
        {0,-1}
    };
    
    private static final char LAND = '1', WATER = '0';
    
    public int numIslands(char[][] grid) {
        
        int numIslands = 0;
        
        for(int i = 0; i<grid.length; i++){
            for(int j = 0; j<grid[0].length; j++){
                
                if(grid[i][j] == LAND){
                    
                    dfs(grid, i, j);
                    numIslands++;
                }
            }
        }
        return numIslands;
        
    }
    
    private void dfs(char[][] grid, int i, int j){
        
        //base
        if(i<0 || j<0 || j>=grid[0].length || i>=grid.length || grid[i][j]==WATER){
            return;
        }
        
        grid[i][j] = '0';  //marking water as I have visited this
        
        //explore
        for(int[] dir : directions){
            int I = i + dir[1];
            int J = j + dir[0];
            dfs(grid, I, J);
        }
    }
}
