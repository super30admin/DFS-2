Time : O(MN)
Space : O(N)

class Solution {
    public int numIslands(char[][] grid) {
        int count=0;
        int n=grid.length;
        int m=grid[0].length;
        int[][] dirs=new int[][]{{1,0},{0,1},{-1,0},{0,-1}};
    
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1'){
                    count++;
                 Queue<int []> q=new LinkedList<>();
                    q.add(new int[]{i,j});
                        grid[i][j]='0';
                        while(!q.isEmpty()){
                           int[] curr=q.poll();
                            for(int[] dir:dirs){
                                int nr=curr[0]+dir[0];
                                int nc=curr[1]+dir[1];
                                if(nr>=0 && nc>=0 && nr<n && nc<m && grid[nr][nc]=='1'){
                                    q.add(new int[]{nr,nc});
                                    grid[nr][nc]='0';
                                }
                            }
                            
                        }
                }
            }
        }           

          return count; 
        
    }
}
