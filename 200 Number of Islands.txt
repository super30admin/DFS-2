//200. Number of Islands

//BFS
// Time Complexity : O(m*n)
// Space Complexity :O(min (m, n))
class Solution {
    public int numIslands(char[][] grid) {
        int m=grid.length;int n=grid[0].length;
        int [][]dirs={{1,0},{0,-1},{-1,0},{0,1}};
        int count=0;
        Queue<int[]>q=new LinkedList<>();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]=='1'){
                    count++;
                    q.add(new int[]{i,j});
                    grid[i][j]='0';
                    while(!q.isEmpty()){
                        int[] curr=q.poll();
                        for(int []dir:dirs){
                            int nr=curr[0]+dir[0];
                            int nc=curr[1]+dir[1];
                            if(nr>=0 && nc>=0 && nr<m && nc<n && grid[nr][nc]=='1'){
                                q.add(new int[]{nr,nc});
                                grid[nr][nc]='0';
                            }
                        }
                    }
                }
            }
        }
        return count;
    }
}


