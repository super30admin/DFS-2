//BFS
//TC:O(n)
//SC:O(n)
class Solution {
    public int numIslands(char[][] grid) {
        int [] [] dirs = {{1,0},{-1,0},{0,1},{0,-1}};
        if (grid == null) return 0;
        Queue <int []> q = new LinkedList<>();
        int m = grid.length; int n = grid[0].length;
        int count = 0;
        for (int i =0; i<m; i++){
            for (int j=0;j<n;j++){
                if (grid[i][j] == '1'){
                    q.add(new int[]{i,j});
                    count++;
                }
                while (!q.isEmpty()) {
                    int size = q.size();
                    for (int k=0;k<size;k++){
                        int [] curr = q.poll();
                        for (int []dir:dirs) {
                            int nr = curr[0] + dir[0];
                            int nc = curr[1] + dir[1];
                            if (nr >=0 && nc>=0 && nr<m && nc<n && grid[nr][nc] =='1') {
                                grid[nr][nc] = '0';
                                q.add(new int[]{nr,nc});
                                
                            }
                        }
                    }
                }
            }
        }
        return count;
    }
}
