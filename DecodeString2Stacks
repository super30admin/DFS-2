class Solution {
    public String decodeString(String s) {
        int currNum = 0;
        StringBuilder currString = new StringBuilder();
        Stack<Integer> numStack = new Stack<>();
        Stack<StringBuilder> strStack = new Stack<>();

        for(int i = 0 ; i < s.length() ; i++){

            char c = s.charAt(i);

            // case 1 : if character is a number

            if(Character.isDigit(c)){
                currNum  = currNum * 10 + c - '0';
            }
            else if(c == '['){
                numStack.push(currNum);
                strStack.push(currString);
                currNum = 0;
                currString = "";
            }
            else if(c == ']'){
                int times = numStack.pop();
                StringBuilder newString = new StringBuilder();
                for(int i = 0 ; i < times ; i++){
                    newString.append(currString);
                }
                currString = strStack.pop();
            }
            else {
                currString.append(c);
            }

        }
        return currString.toString();


    }
}
