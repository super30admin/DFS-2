//TimeComplexity. Max(k).n
//Spacecomplexity O(H)


class Solution {
    public String decodeString(String s) {
        Stack<StringBuilder> str = new Stack();
        Stack<Integer> num_st = new Stack();
        StringBuilder sb = new StringBuilder();
        int num = 0;

        for(int i = 0; i < s.length(); i++){
            char ch = s.charAt(i);

            if(Character.isDigit(ch)){
            num = num*10 + ch - '0';
            }else if(ch == '['){
                str.push(sb);
                num_st.push(num);
                sb = new StringBuilder();
                num = 0;

            }else if(ch == ']'){
                int k = num_st.pop();
                StringBuilder temp = new StringBuilder();
                for(int j = 0; j < k ; j++){
                        temp.append(sb);
                }
                StringBuilder parent = str.pop();
                sb = parent.append(temp);
               
            }else{
                sb.append(ch);
            }
        }
        return sb.toString();
    }
}
