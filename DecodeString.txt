/**
Time Complexity - O(K*n) where K = product of all numbers in the expression
Space Complexity - O(m+n)
 */
class Solution {

    public String decodeString(String s) {
       Stack<Integer> counts = new Stack<>();
       Stack<String> result = new Stack<>();
       int i = 0;
       String res = "";

       while (i < s.length()) {
           if (Character.isDigit(s.charAt(i))) {
               int count  = 0;
               while (Character.isDigit(s.charAt(i))) {
                   count = count * 10 + (s.charAt(i) - '0');
                   i++;
               }
               counts.push(count);
           }
           else if (s.charAt(i) == '[') {
                result.push(res);
                res = "";
                i++;
           }
           else if (s.charAt(i) == ']') {
                StringBuilder temp = new StringBuilder(result.pop());
                int count = counts.pop();
                for (int j =0; j<count; j++) {
                    temp.append(res);
                }
                res = temp.toString();
                i++;
           } else{
               res += s.charAt(i);
               i++;
           }
       }
       return res;
    }
}
