/**********

Time O(mn)
Space O(1)
Leetcode yes
problem no
 Same as flood fill, recursive call till we find a 0 . if count > 0 it means we found an island so we increment sum by 1 ;



****************/

class Solution {
    public int numIslands(char[][] grid) {
        
        if(grid.length == 0)
            return 0;
       
        int m = grid.length;
        int n = grid[0].length;
        boolean flag =false;
        int sum =0;
        int count = 0;
        int islandcount;
        
        for(int i=0; i< m ; i++)
        {
            for(int j=0; j<n ; j++ )
            {
                if(grid[i][j] == '1')
                {    islandcount = helper(grid, i , j , m , n, count);
                     if(islandcount > 0)
                     sum += 1;
                }
                
            }
        }
        
        return sum;
      
    }
    
     public static int helper(char[][] grid , int i , int j, int rows , int cols,int count)
        {
            if(i < 0 || j < 0 || i >=rows || j >= cols || grid[i][j] == '0')
                return count; 
            
            count +=1 ;
            grid[i][j]='0';
            helper(grid , i+1 ,j , rows,cols,count );
            helper(grid , i-1 ,j , rows,cols,count );
            helper(grid , i ,j-1 , rows,cols,count );
            helper(grid , i ,j+1 , rows,cols,count );
            
         return count;
        }
}
