Time complexity: O(mn)
Space complexity: O(mn)
Did this code successfully submitted on leetcode: Yes

class Solution {
    public int numIslands(char[][] grid) {
        
        if(grid==null || grid.length==0 || grid[0].length==0)
            return 0;
        
        int m = grid.length;
        int n = grid[0].length;
        int time =0;
        
        for(int i=0; i<m; i++){
            for(int j=0;j<n;j++){
                
                if(grid[i][j]=='1'){
                    dfs(grid, i, j, m, n);
                    time++;
                }
            }
        }
        
        return time;
    }
    
    int[][] dirs = {{0,1},{0,-1},{1,0},{-1,0}};
    
    private void dfs(char[][] grid, int i, int j, int m, int n){
        
        grid[i][j]='0';
        
        for(int[] direction:dirs){
            int r = i + direction[0];
            int c = j + direction[1];
            
            if(r>=0 && r<m && c>=0 && c<n && grid[r][c]=='1')
                dfs(grid, r, c, m, n);
        }
    }
}
