// Time Complexity : O(mn)
// Space Complexity : O(mn)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No
//Approach 
//1) maintain a queue and push index of encountered '1' in queue and subsequently keep adding all the neighbors with value '1' till queue becomes empty
class Solution {
    public int numIslands(char[][] grid) {
        if(grid == null || grid.length == 0)return 0;
        int m = grid.length; int n = grid[0].length;
        int count = 0;
        Queue<int []> q = new LinkedList<>();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j] == '1'){
                    count++;
                    grid[i][j] = '0';
                    q.add(new int[]{i,j});
                    while(!q.isEmpty()){
                        int size = q.size();
                        int [][] dirs = {{0,1},{0,-1},{1,0},{-1,0}};
                        for(int k = 0;k<size;k++){
                            int[] curr = q.poll();
                            for(int[] dir:dirs){
                                int r = dir[0]+curr[0];
                                int c = dir[1]+curr[1];
                                if(r>=0 && r<m && c>=0 && c<n && grid[r][c] == '1'){
                                    grid[r][c] = '0';
                                    q.add(new int[]{r,c});
                                }
                            }
                        }
                    }
                }
            }
        }
        return count;
    }
}