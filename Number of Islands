class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        rows = len(grid)
        cols = len(grid[0])
        def dfs(r, c):
                if r < 0 or c < 0 or r >= rows or c >= cols or grid[r][c]  != '1':
                    return
                grid[r][c] = '0'
                dfs(r + 1, c)
                dfs(r, c + 1)
                dfs(r - 1, c)
                dfs(r, c - 1)
        result = 0
        for r in range(0, rows):
            for c in range(0, cols):
                if grid[r][c] == '1':
                    result += 1
                    dfs(r, c)     
        return result
    
# Time Complexity: O(mn)
# Space Complexity: O(1)
# Successfully implemented on Leetcode
